name: test

on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: 1
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  FORCE_COLOR: 1
  JUPYTERLITE_NO_JUPYTER_SERVER: 1
  JUPYTERLITE_NO_JUPYTERLAB_SERVER: 1
  JLPL_TIMEOUT: 500
  JLPL_PIXI_VERSION: 0.39.3

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v${{ env.JLPL_PIXI_VERSION }}
          cache: true
          environments: build
      - run: pixi run build
      - name: upload dist
        uses: actions/upload-artifact@v4
        with:
          name: jlpl-${{ github.run_number }}-dist
          path: dist
      - name: upload build
        uses: actions/upload-artifact@v4
        with:
          name: jlpl-${{ github.run_number }}-build
          path: .pixi/task-cache-v0

  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v${{ env.JLPL_PIXI_VERSION }}
          cache: true
          environments: lint
      - run: pixi run lint

  test:
    name: ${{ matrix.test-env }} (${{ matrix.vm }} ${{ matrix.browser }})
    needs: [build]
    runs-on: ${{ matrix.vm }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {test-env: test-max,  vm: macos-latest,   browser: chrome}
          - {test-env: test-max,  vm: ubuntu-24.04 ,  browser: chromium}
          - {test-env: test-max,  vm: windows-latest, browser: chrome}
          - {test-env: test-min,  vm: macos-13,       browser: firefox}
          - {test-env: test-min,  vm: ubuntu-22.04 ,  browser: firefox}
          - {test-env: test-min,  vm: windows-latest, browser: firefox}
          - {test-env: test-next, vm: ubuntu-latest , browser: firefox}
    env:
      JLPL_BROWSER: ${{ matrix.browser }}
    steps:
      - run: git config --global core.autocrlf false
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v${{ env.JLPL_PIXI_VERSION }}
          cache: true
          environments: build ${{ matrix.test-env }}
      - name: download dist
        uses: actions/download-artifact@v4
        with:
          name: jlpl-${{ github.run_number }}-dist
          path: dist
      - name: download build
        uses: actions/download-artifact@v4
        with:
          name: jlpl-${{ github.run_number }}-build
          path: build
      - run: pixi run -v ${{ matrix.test-env }}-cli
      - run: pixi run ${{ matrix.test-env }}-core
      - run: pixi run ${{ matrix.test-env }}-wd
      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: |-
            jlpl-${{ github.run_number }}-${{ matrix.test-env }}-${{ matrix.vm }}
          path: |
            .pixi/task-cache-v0
            build/reports

  docs:
    name: docs
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v${{ env.JLPL_PIXI_VERSION }}
          cache: true
          environments: build docs
      - name: download dist
        uses: actions/download-artifact@v4
        with:
          name: jlpl-${{ github.run_number }}-dist
          path: dist
      - name: download builds
        uses: actions/download-artifact@v4
        with:
          name: jlpl-${{ github.run_number }}-build
          path: build
      - run: pixi run docs-lite
      - run: pixi run docs-sphinx
      - uses: actions/upload-artifact@v4
        with:
          name: |-
            jlpl-docs-${{ github.run_number }}
          path: build/docs
      - run: pixi run check
