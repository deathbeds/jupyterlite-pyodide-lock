name: test

on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  JUPYTERLITE_NO_JUPYTER_SERVER: 1
  JUPYTERLITE_NO_JUPYTERLAB_SERVER: 1
  JLPL_TIMEOUT: 500
  JLPL_PIXI_VERSION: 0.22.0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.6.0
        with:
          pixi-version: v${{ env.JLPL_PIXI_VERSION }}
          cache: true
          environments: build
      - run: pixi run -e build build
      - uses: actions/upload-artifact@v4
        with:
          name: jlpl-${{ github.run_number }}-dist
          path: ./dist

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.6.0
        with:
          pixi-version: v${{ env.JLPL_PIXI_VERSION }}
          cache: true
          environments: lint
      - run: pixi run lint

  test:
    name: ${{ matrix.test-env }} (${{ matrix.os }} ${{ matrix.browser }})
    needs: [build]
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu", "macos", "windows"]
        test-env: ["test", "test-oldest"]
        include:
          - test-env: test-oldest
            browser: chrome
          - test-env: test-oldest
            os: ubuntu
            browser: firefox
    env:
      JLPL_BROWSER: ${{ matrix.browser }}
    steps:
      - run: git config --global core.autocrlf false
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.6.0
        with:
          pixi-version: v${{ env.JLPL_PIXI_VERSION }}
          cache: true
          environments: ${{ matrix.test-env }}
      - uses: actions/download-artifact@v4
        with:
          name: jlpl-${{ github.run_number }}-dist
          path: ./dist
      - run: pixi run -e=${{ matrix.test-env }} test-core
      - run: pixi run -e=${{ matrix.test-env }} test
      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: |-
            jlpl-${{ github.run_number }}-${{ matrix.test-env }}-${{ matrix.os }}
          path: |
            ./.pixi/task-cache-v0
            ./build/reports
            ./contrib/*/build/reports

  docs:
    name: docs
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.6.0
        with:
          pixi-version: v${{ env.JLPL_PIXI_VERSION }}
          cache: true
          environments: >-
            build
            docs
      - uses: actions/download-artifact@v4
        with:
          name: jlpl-${{ github.run_number }}-dist
          path: ./dist
      - run: pixi run -e docs docs-lite
      - run: pixi run -e docs docs-sphinx
      - uses: actions/upload-artifact@v4
        with:
          name: |-
            jlpl-docs-${{ github.run_number }}
          path: ./build/docs
