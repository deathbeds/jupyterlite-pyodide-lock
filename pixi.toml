"$schema" = "https://pixi.sh/v0.22.0/schema/manifest/schema.json"

[project]
name = "jlpl"
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "win-64", "osx-arm64"]

# top-level tasks a la make phony
[tasks]
fix = {depends-on = ["fix-ruff", "fix-taplo", "fix-ipynb"]}
lint = {depends-on = ["lint-ruff", "lint-ipynb"]}
build = {depends-on = ["build-core", "build-webdriver"]}
test = {depends-on = ["test-browsers", "test-core", "test-webdriver"]}
docs = {depends-on = ["docs-lite", "docs-sphinx"]}

# tasks that are customized per env
[tasks.pip]
inputs = [
  "pyproject.toml",
  "contrib/*/pyproject.toml",
]
outputs = ["build/pip-freeze/*.txt"]
cmd = """
  python -m pip install -vv --no-deps --no-build-isolation --ignore-installed --disable-pip-version-check
    -e .
    -e contrib/jupyterlite-pyodide-lock-webdriver
  && mkdir -p build/pip-freeze
  && pip freeze > build/pip-freeze/$PIXI_ENVIRONMENT_NAME.txt"""

# real tasks
[feature.lint.tasks.fix-deps]
inputs = [
  "pyproject.toml",
  "_scripts/fix-deps.py",
]
outputs = ["contrib/*/pyproject.toml"]
cmd = """
  python _scripts/fix-deps.py
    pyproject.toml
    contrib/jupyterlite-pyodide-lock-webdriver/pyproject.toml"""

[feature.lint.tasks.fix-ipynb]
cmd = "python _scripts/nb-lint.py --fix docs"
inputs = [
  "_scripts/nb-lint.py",
  "docs/**/*.ipynb",
  "!**/.ipynb_checkpoints",
]

[feature.lint.tasks.lint-ipynb]
cmd = "python _scripts/nb-lint.py docs"
inputs = [
  "_scripts/nb-lint.py",
  "docs/**/*.ipynb",
  "!**/.ipynb_checkpoints",
]

[feature.lint.tasks.fix-ruff]
depends-on = ["fix-conftest"]
inputs = [
  "_scripts/*.py",
  "contrib/*/src/**/*.py",
  "contrib/*/tests/**/*.py",
  "docs/**/*.ipynb",
  "docs/**/*.py",
  "pyproject.toml",
  "src/**/*.py",
  "tests/**/*.py",
  "!**/.ipynb_checkpoints",
]
cmd = "ruff check --fix-only && ruff format"

[feature.lint.tasks.lint-ruff]
inputs = [
  "_scripts/*.py",
  "contrib/*/src/**/*.py",
  "docs/**/*.ipynb",
  "docs/**/*.py",
  "pyproject.toml",
  "src/**/*.py",
  "!**/.ipynb_checkpoints",
]
cmd = "ruff check && ruff format --check"

[feature.lint.tasks.fix-taplo]
depends-on = ["fix-deps"]
inputs = [
  "*.toml",
  "contrib/*/*.toml",
]
cmd = """
  taplo fmt
    --option=array_auto_collapse=false
    --option=array_auto_expand=true
    --option=compact_inline_tables=true
    --option=column_width=88
    --option=indent_string="  "
    pyproject.toml
    pixi.toml
    contrib/*/pyproject.toml"""

[feature.lint.tasks.fix-conftest]
depends-on = ["fix-deps"]
inputs = [
  "tests/conftest.py",
  "_scripts/replace-between.py",
]
outputs = ["contrib/jupyterlite-pyodide-lock-webdriver/tests/conftest.py"]
cmd = """
  python _scripts/replace-between.py
    tests/conftest.py
    contrib/jupyterlite-pyodide-lock-webdriver/tests/conftest.py
    "### shared fixtures ###" """

[feature.build.tasks.build-licenses]
inputs = ["LICENSE"]
outputs = ["contrib/jupyterlite-pyodide-lock-webdriver/LICENSE"]
cmd = "cp LICENSE contrib/jupyterlite-pyodide-lock-webdriver/LICENSE"

[feature.build.tasks.build-core]
inputs = [
  "LICENSE",
  "pyproject.toml",
  "README.md",
  "src/**/*.py",
  "src/**/*.j2",
]
outputs = [
  "dist/jupyterlite_pyodide_lock-*.tar.gz",
  "dist/jupyterlite_pyodide_lock-*.whl",
]
cmd = "rm -rf dist && pyproject-build . --no-isolation -vv"

[feature.build.tasks.build-webdriver]
depends-on = ["build-licenses"]
inputs = [
  "contrib/jupyterlite-pyodide-lock-webdriver/LICENSE",
  "contrib/jupyterlite-pyodide-lock-webdriver/pyproject.toml",
  "contrib/jupyterlite-pyodide-lock-webdriver/README.md",
  "contrib/jupyterlite-pyodide-lock-webdriver/src/**/*.py",
]
outputs = [
  "contrib/jupyterlite-pyodide-lock-webdriver/dist/jupyterlite_pyodide_lock_webdriver-*.tar.gz",
  "contrib/jupyterlite-pyodide-lock-webdriver/dist/jupyterlite_pyodide_lock_webdriver-0.1.0a0.tar.gz",
]
cwd = "contrib/jupyterlite-pyodide-lock-webdriver"
cmd = "rm -rf dist && pyproject-build . --no-isolation -vv"

[feature.test.tasks.test-browsers]
depends-on = ["pip"]
cmd = "jupyter-pyodide-lock browsers"

[feature.test.tasks.test-core]
depends-on = ["pip"]
inputs = [
  "build/pip-freeze/$PIXI_ENVIRONMENT_NAME.txt",
  "pyproject.toml",
  "src/**/*/.py",
  "tests/**/*/.py",
]
outputs = [
  "build/reports/pytest.html",
  "build/reports/htmlcov/status.json",
]
cmd = "pytest"

[feature.test.tasks.test-webdriver]
depends-on = ["pip"]
inputs = [
  "build/pip-freeze/$PIXI_ENVIRONMENT_NAME.txt",
  "contrib/jupyterlite-pyodide-lock-webdriver/pyproject.toml",
  "contrib/jupyterlite-pyodide-lock-webdriver/src/**/*/.py",
  "contrib/jupyterlite-pyodide-lock-webdriver/tests/**/*/.py",
  "src/**/*/.py",
]
outputs = [
  "contrib/jupyterlite-pyodide-lock-webdriver/build/reports/pytest.html",
  "contrib/jupyterlite-pyodide-lock-webdriver/build/reports/htmlcov/status.json",
]
cmd = "pytest"

[feature.docs.tasks.docs-lite]
depends-on = ["pip"]
inputs = [
  "build/pip-freeze/$PIXI_ENVIRONMENT_NAME.txt",
  "examples/jupyter_lite_config.json",
  "examples/files/**/*.*",
  "src/**/*.py",
]
outputs = ["build/docs-app/SHA256SUMS"]
cwd = "examples"
cmd = "jupyter-lite doit --debug -- pre_archive:report:SHA256SUMS"

[feature.docs.tasks.docs-sphinx]
depends-on = ["build", "docs-lite"]
inputs = [
  "*.md",
  "build/docs-app/SHA256SUMS",
  "contrib/*/dist/*.whl",
  "dist/*.whl",
  "docs/**/*.css",
  "docs/**/*.ipynb",
  "docs/**/*.md",
  "docs/**/*.py",
  "!**/.ipynb_checkpoints",
]
outputs = ["build/docs/.buildinfo"]
cwd = "docs"
cmd = """
  export PYDEVD_DISABLE_FILE_VALIDATION=1
  && sphinx-build -W --keep-going --color -b html . ../build/docs"""

[feature.demo.tasks.lab]
depends-on = ["pip"]
cmd = "jupyter lab --no-browser --debug"

[feature.rtd.tasks.fake-docs-build]
cmd = """
  rm -rf build/fake-docs
  && python -m sphinx -W --keep-going --color -b html ./_scripts/fake-docs ./build/fake-docs
"""

[feature.rtd.tasks.fake-docs-post-build]
cmd = """
  rm -rf $READTHEDOCS_OUTPUT/html
  && cp -r build/docs $READTHEDOCS_OUTPUT/html
"""

### environments for tasks
[environments]
lint = {features = [
  "lint",
], solve-group = "default"}
build = {features = [
  "build",
], solve-group = "default"}
test = {features = [
  "dev",
  "firefox",
  "run",
  "test",
  "webdriver",
], solve-group = "default"}
docs = {features = [
  "demo",
  "build",
  "dev",
  "docs",
  "run",
  "webdriver",
], solve-group = "default"}
rtd = {features = [
  "build",
  "demo",
  "dev",
  "docs",
  "firefox-oldest",
  "run",
  "webdriver",
  "rtd",
], solve-group = "default"}
test-oldest = {features = [
  "dev",
  "firefox-oldest",
  "firefox",
  "run",
  "test",
  "webdriver",
  "webdriver-oldest",
  "py-oldest",
], solve-group = "oldest"}
lab = {features = [
  "demo",
  "dev",
  "docs",
  "run",
  "test",
  "webdriver",
], solve-group = "default"}

[feature.py-oldest.dependencies]
python = "3.10.*"

[feature.run.dependencies]
python = ">=3.10,<3.13"
jupyterlite-core = ">=0.3.0,<0.4.0"
jupyterlite-pyodide-kernel = ">=0.3.1,<0.4.0"
pyodide-lock = ">=0.1.0a4,<0.1.0a6"
pyodide-lock-with-wheel = "*"
tornado = ">=6.1.0"

[feature.dev.dependencies]
pip = "*"
flit-core = ">=3.9,<4.0"

[feature.build.dependencies]
python-build = "*"
flit-core = ">=3.9,<4.0"

[feature.lint.dependencies]
ruff = ">=0.3.0"
taplo = ">=0.9.1"
nbformat = "*"
tomli-w = "*"

[feature.test.dependencies]
pytest = ">=8,<9"
pytest-cov = "*"
pytest-html = "*"

[feature.webdriver.dependencies]
selenium = ">=4.19"

[feature.webdriver-oldest.dependencies]
selenium = "4.19.*"

[feature.firefox.dependencies]
firefox = "*"
geckodriver = "*"

[feature.firefox-oldest.dependencies]
firefox = "115.*"

[feature.docs.dependencies]
autodoc-traits = ">=1.2.2"
myst-nb = "*"
pydata-sphinx-theme = "*"
sphinx = "*"
sphinx-autodoc-typehints = "*"
sphinx-copybutton = "*"
python-libarchive-c = "*"
importnb = "*"

[feature.demo.dependencies]
ipywidgets = ">=8.1,<8.2"
jupyterlab = ">=4.1,<4.2"

[feature.rtd]
platforms = ["linux-64"]
